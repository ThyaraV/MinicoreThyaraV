{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thyara\\\\Documents\\\\GitHub\\\\MiniCore-ThyaraVintimilla\\\\frontend\\\\src\\\\screens\\\\HomeScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport { useGetGradesQuery, useGetUserDetailsQuery } from '../slices/userApiSlice.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomeScreen = () => {\n  _s();\n  var _error$data;\n  const {\n    data: grades,\n    isLoading,\n    error\n  } = useGetGradesQuery();\n  const [users, setUsers] = useState({}); // Estado para guardar los usuarios\n\n  // Asumimos que este hook está disponible para obtener los detalles del usuario\n  const {\n    data: userDetails\n  } = useGetUserDetailsQuery();\n  useEffect(() => {\n    // Lógica para llenar el estado de usuarios con los nombres\n    if (userDetails) {\n      const newUsers = {};\n      userDetails.forEach(user => {\n        newUsers[user._id] = user.name; // Guarda el nombre del usuario basado en su ID\n      });\n      setUsers(newUsers);\n    }\n  }, [userDetails]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message) || error.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Grades\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"User Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"End Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: grades.map(grade => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: users[grade.user] || 'Loading...'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: grade.grade\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(grade.startDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(grade.endDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this)]\n            }, grade._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HomeScreen, \"ZhPke7nMWGZoFVRMHCYq1/cRRF0=\", false, function () {\n  return [useGetGradesQuery, useGetUserDetailsQuery];\n});\n_c = HomeScreen;\nexport default HomeScreen;\n\n/*const[grades,setGrades]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchGrades=async()=>{\r\n            const{data}=await axios.get('/api/grades');\r\n            setGrades(data);\r\n        };\r\n        fetchGrades();\r\n    },[])*/\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useEffect","useState","Row","Col","Table","useGetGradesQuery","useGetUserDetailsQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","HomeScreen","_s","_error$data","data","grades","isLoading","error","users","setUsers","userDetails","newUsers","forEach","user","_id","name","children","fileName","_jsxFileName","lineNumber","columnNumber","message","xs","striped","bordered","hover","map","grade","Date","startDate","toLocaleDateString","endDate","_c","$RefreshReg$"],"sources":["C:/Users/Thyara/Documents/GitHub/MiniCore-ThyaraVintimilla/frontend/src/screens/HomeScreen.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\nimport { useGetGradesQuery, useGetUserDetailsQuery } from '../slices/userApiSlice.js';\r\n\r\nconst HomeScreen = () => {\r\n  const { data: grades, isLoading, error } = useGetGradesQuery();\r\n  const [users, setUsers] = useState({}); // Estado para guardar los usuarios\r\n\r\n  // Asumimos que este hook está disponible para obtener los detalles del usuario\r\n  const { data: userDetails } = useGetUserDetailsQuery();\r\n\r\n  useEffect(() => {\r\n    // Lógica para llenar el estado de usuarios con los nombres\r\n    if (userDetails) {\r\n      const newUsers = {};\r\n      userDetails.forEach(user => {\r\n        newUsers[user._id] = user.name; // Guarda el nombre del usuario basado en su ID\r\n      });\r\n      setUsers(newUsers);\r\n    }\r\n  }, [userDetails]);\r\n\r\n  if (isLoading) return <h2>Loading...</h2>;\r\n  if (error) return <div>{error?.data?.message || error.error}</div>;\r\n\r\n  return (\r\n    <>\r\n      <h1>Grades</h1>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>User Name</th>\r\n                <th>Grade</th>\r\n                <th>Start Date</th>\r\n                <th>End Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {grades.map(grade => (\r\n                <tr key={grade._id}>\r\n                  <td>{users[grade.user] || 'Loading...'}</td> {/* Muestra el nombre del usuario o 'Loading...' si todavía no se ha cargado */}\r\n                  <td>{grade.grade}</td>\r\n                  <td>{new Date(grade.startDate).toLocaleDateString()}</td>\r\n                  <td>{new Date(grade.endDate).toLocaleDateString()}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n\r\n\r\n/*const[grades,setGrades]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchGrades=async()=>{\r\n            const{data}=await axios.get('/api/grades');\r\n            setGrades(data);\r\n        };\r\n        fetchGrades();\r\n    },[])*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}