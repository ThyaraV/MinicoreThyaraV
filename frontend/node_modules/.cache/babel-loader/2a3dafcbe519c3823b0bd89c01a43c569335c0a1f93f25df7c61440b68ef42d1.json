{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thyara\\\\Documents\\\\GitHub\\\\MiniCore-ThyaraVintimilla\\\\frontend\\\\src\\\\screens\\\\progresoScreen.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgresoScreen = () => {\n  _s();\n  const {\n    data: userProgress,\n    isLoading,\n    error\n  } = useGetWeightedProgressQuery();\n  const consolidatedUserProgress = userProgress ? userProgress.reduce((acc, curr) => {\n    if (!acc[curr.name]) {\n      acc[curr.name] = {\n        name: curr.name\n      };\n    }\n    acc[curr.name][curr.progresoName] = curr.weightedAverage;\n    return acc;\n  }, {}) : {};\n\n  // Convertir el objeto consolidado nuevamente en un array para el renderizado\n  const progressArray = Object.values(consolidatedUserProgress);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weighted Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Progreso 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Progreso 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Progreso 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: progressArray.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user['Progreso 1'] || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user['Progreso 2'] || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user['Progreso 3'] || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgresoScreen, \"/MzagfYeApXlFpo4yMTvOP+wE70=\", true);\n_c = ProgresoScreen;\nexport default ProgresoScreen;\n\n/*import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useGetGradesQuery } from '../slices/gradesApiSlice.js';\r\nimport { useGetProgresosQuery } from '../slices/progresoApiSlice.js';\r\nimport '../assets/styles/index.css'; // Asegúrate de que la ruta sea correcta\r\n\r\nconst ProgresoScreen = () => {\r\n  const { data: grades, isLoading, error } = useGetGradesQuery();\r\n  \r\n  //const { data: progresos, isLoading, error } = useGetProgresosQuery();\r\n\r\n  if (isLoading) return <h2>Loading...</h2>;\r\n  if (error) return <div>{error?.data?.message || error.error}</div>;\r\n\r\n  return (\r\n    <>\r\n        <h1>User Progress</h1>\r\n        <Row>\r\n            <Col xs={12}>\r\n                <table className=\"customTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>User Name</th>\r\n                            <th>Progreso 1</th>\r\n                            <th>Progreso 2</th>\r\n                            <th>Progreso 3</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {userProgress.map((progress, index) => (\r\n                            <tr key={index}>\r\n                                <td>{progress.name}</td>\r\n                                <td>{progress['Progreso 1']}</td>\r\n                                <td>{progress['Progreso 2']}</td>\r\n                                <td>{progress['Progreso 3']}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n);\r\n};\r\n\r\nexport default ProgresoScreen;*/\nvar _c;\n$RefreshReg$(_c, \"ProgresoScreen\");","map":{"version":3,"names":["ProgresoScreen","_s","data","userProgress","isLoading","error","useGetWeightedProgressQuery","consolidatedUserProgress","reduce","acc","curr","name","progresoName","weightedAverage","progressArray","Object","values","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","user","index","_c","$RefreshReg$"],"sources":["C:/Users/Thyara/Documents/GitHub/MiniCore-ThyaraVintimilla/frontend/src/screens/progresoScreen.jsx"],"sourcesContent":["const ProgresoScreen = () => {\r\n  const { data: userProgress, isLoading, error } = useGetWeightedProgressQuery();\r\n\r\n  const consolidatedUserProgress = userProgress ? userProgress.reduce((acc, curr) => {\r\n    if (!acc[curr.name]) {\r\n      acc[curr.name] = { name: curr.name };\r\n    }\r\n    acc[curr.name][curr.progresoName] = curr.weightedAverage;\r\n    return acc;\r\n  }, {}) : {};\r\n\r\n  // Convertir el objeto consolidado nuevamente en un array para el renderizado\r\n  const progressArray = Object.values(consolidatedUserProgress);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n  return (\r\n    <div>\r\n      <h1>Weighted Progress</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>User Name</th>\r\n            <th>Progreso 1</th>\r\n            <th>Progreso 2</th>\r\n            <th>Progreso 3</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {progressArray.map((user, index) => (\r\n            <tr key={index}>\r\n              <td>{user.name}</td>\r\n              <td>{user['Progreso 1'] || 'N/A'}</td>\r\n              <td>{user['Progreso 2'] || 'N/A'}</td>\r\n              <td>{user['Progreso 3'] || 'N/A'}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgresoScreen;\r\n\r\n\r\n/*import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useGetGradesQuery } from '../slices/gradesApiSlice.js';\r\nimport { useGetProgresosQuery } from '../slices/progresoApiSlice.js';\r\nimport '../assets/styles/index.css'; // Asegúrate de que la ruta sea correcta\r\n\r\nconst ProgresoScreen = () => {\r\n  const { data: grades, isLoading, error } = useGetGradesQuery();\r\n  \r\n  //const { data: progresos, isLoading, error } = useGetProgresosQuery();\r\n\r\n  if (isLoading) return <h2>Loading...</h2>;\r\n  if (error) return <div>{error?.data?.message || error.error}</div>;\r\n\r\n  return (\r\n    <>\r\n        <h1>User Progress</h1>\r\n        <Row>\r\n            <Col xs={12}>\r\n                <table className=\"customTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>User Name</th>\r\n                            <th>Progreso 1</th>\r\n                            <th>Progreso 2</th>\r\n                            <th>Progreso 3</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {userProgress.map((progress, index) => (\r\n                            <tr key={index}>\r\n                                <td>{progress.name}</td>\r\n                                <td>{progress['Progreso 1']}</td>\r\n                                <td>{progress['Progreso 2']}</td>\r\n                                <td>{progress['Progreso 3']}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n);\r\n};\r\n\r\nexport default ProgresoScreen;*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}