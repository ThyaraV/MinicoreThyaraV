{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thyara\\\\Documents\\\\GitHub\\\\MiniCore-ThyaraVintimilla\\\\frontend\\\\src\\\\screens\\\\progresoScreen.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGetWeightedProgressQuery } from '../slices/progresoApiSlice.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgresoScreen = () => {\n  _s();\n  const {\n    data: userProgress,\n    isLoading,\n    error\n  } = useGetWeightedProgressQuery();\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weighted Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Progreso 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Progreso 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Progreso 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: userProgress && userProgress.map((progress, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: progress.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: progress['Progreso 1'] || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: progress['Progreso 2'] || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: progress['Progreso 3'] || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgresoScreen, \"/MzagfYeApXlFpo4yMTvOP+wE70=\", false, function () {\n  return [useGetWeightedProgressQuery];\n});\n_c = ProgresoScreen;\nexport default ProgresoScreen;\n\n/*import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useGetGradesQuery } from '../slices/gradesApiSlice.js';\r\nimport { useGetProgresosQuery } from '../slices/progresoApiSlice.js';\r\nimport '../assets/styles/index.css'; // Asegúrate de que la ruta sea correcta\r\n\r\nconst ProgresoScreen = () => {\r\n  const { data: grades, isLoading, error } = useGetGradesQuery();\r\n  \r\n  //const { data: progresos, isLoading, error } = useGetProgresosQuery();\r\n\r\n  if (isLoading) return <h2>Loading...</h2>;\r\n  if (error) return <div>{error?.data?.message || error.error}</div>;\r\n\r\n  return (\r\n    <>\r\n        <h1>User Progress</h1>\r\n        <Row>\r\n            <Col xs={12}>\r\n                <table className=\"customTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>User Name</th>\r\n                            <th>Progreso 1</th>\r\n                            <th>Progreso 2</th>\r\n                            <th>Progreso 3</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {userProgress.map((progress, index) => (\r\n                            <tr key={index}>\r\n                                <td>{progress.name}</td>\r\n                                <td>{progress['Progreso 1']}</td>\r\n                                <td>{progress['Progreso 2']}</td>\r\n                                <td>{progress['Progreso 3']}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n);\r\n};\r\n\r\nexport default ProgresoScreen;*/\nvar _c;\n$RefreshReg$(_c, \"ProgresoScreen\");","map":{"version":3,"names":["React","useGetWeightedProgressQuery","jsxDEV","_jsxDEV","ProgresoScreen","_s","data","userProgress","isLoading","error","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","progress","index","name","_c","$RefreshReg$"],"sources":["C:/Users/Thyara/Documents/GitHub/MiniCore-ThyaraVintimilla/frontend/src/screens/progresoScreen.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useGetWeightedProgressQuery } from '../slices/progresoApiSlice.js';\r\n\r\nconst ProgresoScreen = () => {\r\n  const { data: userProgress, isLoading, error } = useGetWeightedProgressQuery();\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Weighted Progress</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>User Name</th>\r\n            <th>Progreso 1</th>\r\n            <th>Progreso 2</th>\r\n            <th>Progreso 3</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            {userProgress && userProgress.map((progress, index) => (\r\n                <tr key={index}>\r\n                <td>{progress.name}</td>\r\n                <td>{progress['Progreso 1'] || 'N/A'}</td>\r\n                <td>{progress['Progreso 2'] || 'N/A'}</td>\r\n                <td>{progress['Progreso 3'] || 'N/A'}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgresoScreen;\r\n\r\n\r\n/*import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useGetGradesQuery } from '../slices/gradesApiSlice.js';\r\nimport { useGetProgresosQuery } from '../slices/progresoApiSlice.js';\r\nimport '../assets/styles/index.css'; // Asegúrate de que la ruta sea correcta\r\n\r\nconst ProgresoScreen = () => {\r\n  const { data: grades, isLoading, error } = useGetGradesQuery();\r\n  \r\n  //const { data: progresos, isLoading, error } = useGetProgresosQuery();\r\n\r\n  if (isLoading) return <h2>Loading...</h2>;\r\n  if (error) return <div>{error?.data?.message || error.error}</div>;\r\n\r\n  return (\r\n    <>\r\n        <h1>User Progress</h1>\r\n        <Row>\r\n            <Col xs={12}>\r\n                <table className=\"customTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>User Name</th>\r\n                            <th>Progreso 1</th>\r\n                            <th>Progreso 2</th>\r\n                            <th>Progreso 3</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {userProgress.map((progress, index) => (\r\n                            <tr key={index}>\r\n                                <td>{progress.name}</td>\r\n                                <td>{progress['Progreso 1']}</td>\r\n                                <td>{progress['Progreso 2']}</td>\r\n                                <td>{progress['Progreso 3']}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n);\r\n};\r\n\r\nexport default ProgresoScreen;*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}