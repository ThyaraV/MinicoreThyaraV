{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thyara\\\\Documents\\\\GitHub\\\\MiniCore-ThyaraVintimilla\\\\frontend\\\\src\\\\screens\\\\progresoScreen.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { useGetGradesQuery } from '../slices/gradesApiSlice.js';\nimport { useGetProgresosQuery } from '../slices/progresoApiSlice.js';\nimport '../assets/styles/index.css'; // Asegúrate de que la ruta sea correcta\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProgresoScreen = () => {\n  _s();\n  var _error$data;\n  const {\n    data: grades,\n    isLoading,\n    error\n  } = useGetGradesQuery();\n  //const { data: progresos, isLoading, error } = useGetProgresosQuery();\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message) || error.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"customTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"User Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Progreso 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Progreso 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Progreso 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: userProgress.map((progress, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: progress.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: progress['Progreso 1']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: progress['Progreso 2']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: progress['Progreso 3']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ProgresoScreen, \"Ba9Rqx+SQz86CaMw2rVcvXi3KOE=\", false, function () {\n  return [useGetGradesQuery];\n});\n_c = ProgresoScreen;\nexport default ProgresoScreen;\nvar _c;\n$RefreshReg$(_c, \"ProgresoScreen\");","map":{"version":3,"names":["React","Row","Col","useGetGradesQuery","useGetProgresosQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","ProgresoScreen","_s","_error$data","data","grades","isLoading","error","children","fileName","_jsxFileName","lineNumber","columnNumber","message","xs","className","userProgress","map","progress","index","name","_c","$RefreshReg$"],"sources":["C:/Users/Thyara/Documents/GitHub/MiniCore-ThyaraVintimilla/frontend/src/screens/progresoScreen.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useGetGradesQuery } from '../slices/gradesApiSlice.js';\r\nimport { useGetProgresosQuery } from '../slices/progresoApiSlice.js';\r\nimport '../assets/styles/index.css'; // Asegúrate de que la ruta sea correcta\r\n\r\nconst ProgresoScreen = () => {\r\n  const { data: grades, isLoading, error } = useGetGradesQuery();\r\n  //const { data: progresos, isLoading, error } = useGetProgresosQuery();\r\n\r\n  if (isLoading) return <h2>Loading...</h2>;\r\n  if (error) return <div>{error?.data?.message || error.error}</div>;\r\n\r\n  return (\r\n    <>\r\n        <h1>User Progress</h1>\r\n        <Row>\r\n            <Col xs={12}>\r\n                <table className=\"customTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>User Name</th>\r\n                            <th>Progreso 1</th>\r\n                            <th>Progreso 2</th>\r\n                            <th>Progreso 3</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {userProgress.map((progress, index) => (\r\n                            <tr key={index}>\r\n                                <td>{progress.name}</td>\r\n                                <td>{progress['Progreso 1']}</td>\r\n                                <td>{progress['Progreso 2']}</td>\r\n                                <td>{progress['Progreso 3']}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n);\r\n};\r\n\r\nexport default ProgresoScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}