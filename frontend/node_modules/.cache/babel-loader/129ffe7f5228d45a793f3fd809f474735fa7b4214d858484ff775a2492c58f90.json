{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thyara\\\\Documents\\\\GitHub\\\\MiniCore-ThyaraVintimilla\\\\frontend\\\\src\\\\screens\\\\progresoScreen.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGetWeightedProgressQuery } from '../slices/progresoApiSlice.js';\n\n// Esta función consolidará los datos de progreso en un solo objeto por usuario\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst consolidateProgressData = progressData => {\n  const passingScore = 6; // Definir la nota de aprobación\n  const usersProgress = {};\n  progressData.forEach(item => {\n    const {\n      name\n    } = item;\n    if (!usersProgress[name]) {\n      usersProgress[name] = {\n        name,\n        'Progreso 1': 'N/A',\n        'Progreso 2': 'N/A',\n        'Progreso 3': 'N/A',\n        'Needed for Passing': 'N/A'\n      };\n    }\n    Object.keys(item).forEach(key => {\n      if (key.includes('Progreso')) {\n        const progresoNum = key.split(' ')[2];\n        usersProgress[name][`Progreso ${progresoNum}`] = parseFloat(item[key]).toFixed(2);\n      }\n    });\n\n    // Si Progreso 3 es 'N/A', calcular lo necesario para aprobar\n    if (usersProgress[name]['Progreso 3'] === 'N/A') {\n      const progreso1 = parseFloat(usersProgress[name]['Progreso 1']) || 0;\n      const progreso2 = parseFloat(usersProgress[name]['Progreso 2']) || 0;\n      const neededForPassing = passingScore - (progreso1 + progreso2);\n\n      // Si el resultado es mayor que 0, se muestra. Si no, se muestra 'Extra effort needed' o un mensaje similar.\n      usersProgress[name]['Needed for Passing'] = neededForPassing > 0 ? neededForPassing.toFixed(2) : 'Extra effort needed';\n    }\n  });\n  return Object.values(usersProgress);\n};\n\n// Función para determinar la clase basada en el progreso y la nota necesaria\nconst getProgressClassName = (progreso, neededForPassing) => {\n  if (progreso === 'N/A') return 'progreso-red';\n  const progressValue = parseFloat(progreso);\n  const neededValue = parseFloat(neededForPassing);\n  if (progressValue > neededValue) return 'progreso-green';\n  if (progressValue === neededValue) return 'progreso-yellow';\n  return 'progreso-red'; // Caso en que la nota de progreso sea menor que la necesaria para aprobar\n};\nconst ProgresoScreen = () => {\n  _s();\n  const {\n    data: userProgress,\n    isLoading,\n    isError,\n    error\n  } = useGetWeightedProgressQuery();\n  const [filter, setFilter] = useState('');\n  const [filteredData, setFilteredData] = useState([]);\n\n  // Consolidar los datos de progreso antes de renderizarlos\n  const consolidatedData = isLoading || isError ? [] : consolidateProgressData(userProgress);\n  useEffect(() => {\n    if (userProgress && !isLoading && !isError) {\n      const consolidated = consolidateProgressData(userProgress);\n      const filtered = filter ? consolidated.filter(user => user.name.toLowerCase().includes(filter.toLowerCase())) : consolidated;\n      setFilteredData(filtered);\n    }\n  }, [userProgress, filter, isLoading, isError]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 25\n  }, this);\n  if (isError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error.toString()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 23\n  }, this);\n\n  // Manejador para cambios en el campo de búsqueda\n  const handleFilterChange = e => {\n    setFilter(e.target.value);\n  };\n\n  // Renderizado de la tabla con datos de progreso consolidados\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weighted Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search user...\",\n      value: filter,\n      onChange: handleFilterChange,\n      className: \"filter-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"customTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Progreso 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Progreso 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Progreso 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Needed for Passing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: consolidatedData.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user['Progreso 1']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user['Progreso 2']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: getProgressClassName(user['Progreso 3'], user['Needed for Passing']),\n            children: user['Progreso 3']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user['Needed for Passing']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgresoScreen, \"F9vHWrNMZAc0bADSoHzHc+G0Rr0=\", false, function () {\n  return [useGetWeightedProgressQuery];\n});\n_c = ProgresoScreen;\nexport default ProgresoScreen;\nvar _c;\n$RefreshReg$(_c, \"ProgresoScreen\");","map":{"version":3,"names":["React","useGetWeightedProgressQuery","jsxDEV","_jsxDEV","consolidateProgressData","progressData","passingScore","usersProgress","forEach","item","name","Object","keys","key","includes","progresoNum","split","parseFloat","toFixed","progreso1","progreso2","neededForPassing","values","getProgressClassName","progreso","progressValue","neededValue","ProgresoScreen","_s","data","userProgress","isLoading","isError","error","filter","setFilter","useState","filteredData","setFilteredData","consolidatedData","useEffect","consolidated","filtered","user","toLowerCase","children","fileName","_jsxFileName","lineNumber","columnNumber","toString","handleFilterChange","e","target","value","type","placeholder","onChange","className","map","index","_c","$RefreshReg$"],"sources":["C:/Users/Thyara/Documents/GitHub/MiniCore-ThyaraVintimilla/frontend/src/screens/progresoScreen.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useGetWeightedProgressQuery } from '../slices/progresoApiSlice.js';\r\n\r\n// Esta función consolidará los datos de progreso en un solo objeto por usuario\r\nconst consolidateProgressData = (progressData) => {\r\n  const passingScore = 6; // Definir la nota de aprobación\r\n  const usersProgress = {};\r\n\r\n  progressData.forEach(item => {\r\n    const { name } = item;\r\n    if (!usersProgress[name]) {\r\n      usersProgress[name] = { name, 'Progreso 1': 'N/A', 'Progreso 2': 'N/A', 'Progreso 3': 'N/A', 'Needed for Passing': 'N/A' };\r\n    }\r\n\r\n    Object.keys(item).forEach(key => {\r\n      if (key.includes('Progreso')) {\r\n        const progresoNum = key.split(' ')[2];\r\n        usersProgress[name][`Progreso ${progresoNum}`] = parseFloat(item[key]).toFixed(2);\r\n      }\r\n    });\r\n\r\n    // Si Progreso 3 es 'N/A', calcular lo necesario para aprobar\r\n    if (usersProgress[name]['Progreso 3'] === 'N/A') {\r\n      const progreso1 = parseFloat(usersProgress[name]['Progreso 1']) || 0;\r\n      const progreso2 = parseFloat(usersProgress[name]['Progreso 2']) || 0;\r\n      const neededForPassing = passingScore - (progreso1 + progreso2);\r\n\r\n      // Si el resultado es mayor que 0, se muestra. Si no, se muestra 'Extra effort needed' o un mensaje similar.\r\n      usersProgress[name]['Needed for Passing'] = neededForPassing > 0 ? neededForPassing.toFixed(2) : 'Extra effort needed';\r\n    }\r\n  });\r\n\r\n  return Object.values(usersProgress);\r\n};\r\n\r\n// Función para determinar la clase basada en el progreso y la nota necesaria\r\nconst getProgressClassName = (progreso, neededForPassing) => {\r\n  if (progreso === 'N/A') return 'progreso-red';\r\n  const progressValue = parseFloat(progreso);\r\n  const neededValue = parseFloat(neededForPassing);\r\n\r\n  if (progressValue > neededValue) return 'progreso-green';\r\n  if (progressValue === neededValue) return 'progreso-yellow';\r\n  return 'progreso-red'; // Caso en que la nota de progreso sea menor que la necesaria para aprobar\r\n};\r\n\r\nconst ProgresoScreen = () => {\r\n  const {\r\n    data: userProgress,\r\n    isLoading,\r\n    isError,\r\n    error\r\n  } = useGetWeightedProgressQuery();\r\n  const [filter, setFilter] = useState('');\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  // Consolidar los datos de progreso antes de renderizarlos\r\n  const consolidatedData = isLoading || isError ? [] : consolidateProgressData(userProgress);\r\n  useEffect(() => {\r\n    if (userProgress && !isLoading && !isError) {\r\n      const consolidated = consolidateProgressData(userProgress);\r\n      const filtered = filter\r\n        ? consolidated.filter(user => user.name.toLowerCase().includes(filter.toLowerCase()))\r\n        : consolidated;\r\n      setFilteredData(filtered);\r\n    }\r\n  }, [userProgress, filter, isLoading, isError]);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (isError) return <div>Error: {error.toString()}</div>;\r\n\r\n   // Manejador para cambios en el campo de búsqueda\r\n   const handleFilterChange = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  // Renderizado de la tabla con datos de progreso consolidados\r\n  return (\r\n    <div>\r\n      <h1>Weighted Progress</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search user...\"\r\n        value={filter}\r\n        onChange={handleFilterChange}\r\n        className=\"filter-input\"\r\n      />\r\n      <table className=\"customTable\">\r\n        <thead>\r\n          <tr>\r\n            <th>User Name</th>\r\n            <th>Progreso 1</th>\r\n            <th>Progreso 2</th>\r\n            <th>Progreso 3</th>\r\n            <th>Needed for Passing</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {consolidatedData.map((user, index) => (\r\n            <tr key={index}>\r\n              <td>{user.name}</td>\r\n              <td>{user['Progreso 1']}</td>\r\n              <td>{user['Progreso 2']}</td>\r\n              <td className={getProgressClassName(user['Progreso 3'], user['Needed for Passing'])}>\r\n                {user['Progreso 3']}\r\n              </td>\r\n              <td>{user['Needed for Passing']}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgresoScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}