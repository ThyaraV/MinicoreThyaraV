{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thyara\\\\Documents\\\\GitHub\\\\MiniCore-ThyaraVintimilla\\\\frontend\\\\src\\\\screens\\\\progresoScreen.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGetWeightedProgressQuery } from '../slices/progresoApiSlice.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgresoScreen = () => {\n  _s();\n  const {\n    data: userProgress,\n    isLoading,\n    isError,\n    error\n  } = useGetWeightedProgressQuery();\n\n  // Función para consolidar los datos de progreso\n  const consolidateProgress = progressData => {\n    const progressMap = new Map();\n    progressData.forEach(progress => {\n      const {\n        name\n      } = progress;\n      if (!progressMap.has(name)) {\n        progressMap.set(name, {\n          name,\n          'Progreso 1': 'N/A',\n          'Progreso 2': 'N/A',\n          'Progreso 3': 'N/A'\n        });\n      }\n      Object.entries(progress).forEach(([key, value]) => {\n        if (key.startsWith('Progreso')) {\n          const userProgress = progressMap.get(name);\n          userProgress[key] = value.toFixed(2); // Convierte el valor a string con 2 decimales\n          progressMap.set(name, userProgress);\n        }\n      });\n    });\n    return Array.from(progressMap.values());\n  };\n\n  // Consolidar los datos antes de renderizarlos\n  const consolidatedData = isLoading || isError ? [] : consolidateProgress(userProgress);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 25\n  }, this);\n  if (isError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error.toString()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weighted Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Progreso 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Progreso 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Progreso 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: consolidatedData.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user['Progreso 1']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user['Progreso 2']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user['Progreso 3']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgresoScreen, \"vQXRSnkNtWXyppuDnbqJZ8ltFjk=\", false, function () {\n  return [useGetWeightedProgressQuery];\n});\n_c = ProgresoScreen;\nexport default ProgresoScreen;\n\n/*import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useGetGradesQuery } from '../slices/gradesApiSlice.js';\r\nimport { useGetProgresosQuery } from '../slices/progresoApiSlice.js';\r\nimport '../assets/styles/index.css'; // Asegúrate de que la ruta sea correcta\r\n\r\nconst ProgresoScreen = () => {\r\n  const { data: grades, isLoading, error } = useGetGradesQuery();\r\n  \r\n  //const { data: progresos, isLoading, error } = useGetProgresosQuery();\r\n\r\n  if (isLoading) return <h2>Loading...</h2>;\r\n  if (error) return <div>{error?.data?.message || error.error}</div>;\r\n\r\n  return (\r\n    <>\r\n        <h1>User Progress</h1>\r\n        <Row>\r\n            <Col xs={12}>\r\n                <table className=\"customTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>User Name</th>\r\n                            <th>Progreso 1</th>\r\n                            <th>Progreso 2</th>\r\n                            <th>Progreso 3</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {userProgress.map((progress, index) => (\r\n                            <tr key={index}>\r\n                                <td>{progress.name}</td>\r\n                                <td>{progress['Progreso 1']}</td>\r\n                                <td>{progress['Progreso 2']}</td>\r\n                                <td>{progress['Progreso 3']}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n);\r\n};\r\n\r\nexport default ProgresoScreen;*/\nvar _c;\n$RefreshReg$(_c, \"ProgresoScreen\");","map":{"version":3,"names":["React","useGetWeightedProgressQuery","jsxDEV","_jsxDEV","ProgresoScreen","_s","data","userProgress","isLoading","isError","error","consolidateProgress","progressData","progressMap","Map","forEach","progress","name","has","set","Object","entries","key","value","startsWith","get","toFixed","Array","from","values","consolidatedData","children","fileName","_jsxFileName","lineNumber","columnNumber","toString","map","user","index","_c","$RefreshReg$"],"sources":["C:/Users/Thyara/Documents/GitHub/MiniCore-ThyaraVintimilla/frontend/src/screens/progresoScreen.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useGetWeightedProgressQuery } from '../slices/progresoApiSlice.js';\r\n\r\nconst ProgresoScreen = () => {\r\n  const {\r\n    data: userProgress,\r\n    isLoading,\r\n    isError,\r\n    error\r\n  } = useGetWeightedProgressQuery();\r\n\r\n  // Función para consolidar los datos de progreso\r\n  const consolidateProgress = (progressData) => {\r\n    const progressMap = new Map();\r\n\r\n    progressData.forEach(progress => {\r\n      const { name } = progress;\r\n      if (!progressMap.has(name)) {\r\n        progressMap.set(name, {\r\n          name,\r\n          'Progreso 1': 'N/A',\r\n          'Progreso 2': 'N/A',\r\n          'Progreso 3': 'N/A'\r\n        });\r\n      }\r\n\r\n      Object.entries(progress).forEach(([key, value]) => {\r\n        if (key.startsWith('Progreso')) {\r\n          const userProgress = progressMap.get(name);\r\n          userProgress[key] = value.toFixed(2); // Convierte el valor a string con 2 decimales\r\n          progressMap.set(name, userProgress);\r\n        }\r\n      });\r\n    });\r\n\r\n    return Array.from(progressMap.values());\r\n  };\r\n\r\n  // Consolidar los datos antes de renderizarlos\r\n  const consolidatedData = isLoading || isError ? [] : consolidateProgress(userProgress);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (isError) return <div>Error: {error.toString()}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Weighted Progress</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>User Name</th>\r\n            <th>Progreso 1</th>\r\n            <th>Progreso 2</th>\r\n            <th>Progreso 3</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {consolidatedData.map((user, index) => (\r\n            <tr key={index}>\r\n              <td>{user.name}</td>\r\n              <td>{user['Progreso 1']}</td>\r\n              <td>{user['Progreso 2']}</td>\r\n              <td>{user['Progreso 3']}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgresoScreen;\r\n\r\n\r\n\r\n\r\n/*import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useGetGradesQuery } from '../slices/gradesApiSlice.js';\r\nimport { useGetProgresosQuery } from '../slices/progresoApiSlice.js';\r\nimport '../assets/styles/index.css'; // Asegúrate de que la ruta sea correcta\r\n\r\nconst ProgresoScreen = () => {\r\n  const { data: grades, isLoading, error } = useGetGradesQuery();\r\n  \r\n  //const { data: progresos, isLoading, error } = useGetProgresosQuery();\r\n\r\n  if (isLoading) return <h2>Loading...</h2>;\r\n  if (error) return <div>{error?.data?.message || error.error}</div>;\r\n\r\n  return (\r\n    <>\r\n        <h1>User Progress</h1>\r\n        <Row>\r\n            <Col xs={12}>\r\n                <table className=\"customTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>User Name</th>\r\n                            <th>Progreso 1</th>\r\n                            <th>Progreso 2</th>\r\n                            <th>Progreso 3</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {userProgress.map((progress, index) => (\r\n                            <tr key={index}>\r\n                                <td>{progress.name}</td>\r\n                                <td>{progress['Progreso 1']}</td>\r\n                                <td>{progress['Progreso 2']}</td>\r\n                                <td>{progress['Progreso 3']}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n);\r\n};\r\n\r\nexport default ProgresoScreen;*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}